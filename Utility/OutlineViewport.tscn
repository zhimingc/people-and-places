[gd_scene load_steps=4 format=2]

[ext_resource path="res://Utility/OutlineCam.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float width: hint_range(0.0, 10.0);
uniform vec4 color: hint_color;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

float random (in float x) {
    return fract(sin(x)*1e4);
}

float noise (in float x) {
    float i = floor(x);
    float f = fract(x);

    // Cubic Hermine Curve
    float u = f * f * (3.0 - 2.0 * f);

    return mix(random(i), random(i + 1.0), u);
}

void fragment() {
	vec4 c = texture(TEXTURE, SCREEN_UV, 0.0);
	if (c.a == 0.0){
		
		vec2 side_width = width*SCREEN_PIXEL_SIZE;
		bool is_done = false;
		float pixelMod = width * 1.25;
		float halfPixelMod = pixelMod * 0.5;
	
		for (float x = -side_width.x; x <= side_width.x && !is_done; x += SCREEN_PIXEL_SIZE.x) {
			for (float y = -side_width.y; y <= side_width.y && !is_done; y += SCREEN_PIXEL_SIZE.y) {
				// float nx = x + (mod(rand(vec2(x + TIME, y)), SCREEN_PIXEL_SIZE.x * pixelMod) - SCREEN_PIXEL_SIZE.x * halfPixelMod);
				float nx = x; // + (mod(noise(x + TIME), SCREEN_PIXEL_SIZE.x * pixelMod) - SCREEN_PIXEL_SIZE.x * halfPixelMod);
				// float ny = y + (mod(rand(vec2(x, y + TIME)), SCREEN_PIXEL_SIZE.y * pixelMod) - SCREEN_PIXEL_SIZE.y * halfPixelMod);
				float ny = y; //+ (mod(noise(y + TIME), SCREEN_PIXEL_SIZE.y * pixelMod) - SCREEN_PIXEL_SIZE.y * halfPixelMod);
				vec4 nc = texture(TEXTURE, SCREEN_UV + vec2(nx, ny), 0.0);
				if ( nc.a != 0.0) {
					COLOR = color;
					is_done = true;
				}
			}
		}
		if (!is_done){
			COLOR = vec4(0, 0, 0, 0);
		}
	}else{
		COLOR = vec4(0, 0, 0, 0);
	}
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/width = 2.0
shader_param/color = Color( 0, 0, 0, 1 )

[node name="ViewportContainer" type="ViewportContainer"]
material = SubResource( 2 )
margin_right = 960.0
margin_bottom = 540.0
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 960, 540 )
transparent_bg = true
handle_input_locally = false
debug_draw = 1
render_target_update_mode = 3

[node name="Camera2" type="Camera" parent="Viewport"]
cull_mask = 1
current = true
size = 25.0
far = 1000.0
script = ExtResource( 1 )
